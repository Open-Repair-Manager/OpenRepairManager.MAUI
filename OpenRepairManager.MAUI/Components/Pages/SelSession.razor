@page "/SessionSelect"
@layout SetupLayout;
@using OpenRepairManager.MAUI.Services
@using System.Diagnostics
@using OpenRepairManager.MAUI.Components.Layout

<div class="mb-3">
    <label class="form-label" for="selSessions">Session</label>
    <select class="form-select" id="selSessions" @bind="@selectedSessionSlug">
        @foreach (var session in _sessions)
        {
            <option value="@session.SessionSlug">@session.SessionName</option>
        }
    </select>
</div>
<div class="mb-3">
    <label for="selCat" class="form-label">Category</label>
    <select id="selCat" class="form-select" @bind="category">
        <option value="Reception">Reception</option>
        <option value="Electrical & Devices">Electrical &amp; Devices</option>
        <option value="General">General</option>
    </select>
    
</div>
<div class="mb-3">
    <button class="btn btn-success" @onclick="SaveSessionsAsync">Confirm</button>
</div>

<script type="text/javascript">
    document.getElementById("setupTitle").innerHTML = "Select Session";
</script>

@code
{
    private async Task SaveSessionsAsync()
    {
        //Debug.WriteLine($"{selectedSessionID} {selectedSessionSlug}, {category}");
        selectedSessionID = _sessions.First(s => s.SessionSlug.ToUpper() == selectedSessionSlug.ToUpper()).SessionID;
        Preferences.Default.Set("SessionID", selectedSessionID);
        Preferences.Default.Set("Category", category);
        Preferences.Default.Set("SessionSlug", selectedSessionSlug);
        Debug.WriteLine($"{selectedSessionSlug}, {selectedSessionID}, {category}");
        NavManager.NavigateTo($"/RepairItems");
    }
    List<Session> _sessions = new();
    private string selectedSessionSlug { get; set; }
    private string category { get; set; }
    private int selectedSessionID { get; set; }
    protected override async Task OnInitializedAsync()
    {
        string apiURL = Preferences.Default.Get("ApiUrl", "");
        string apiKey = Preferences.Default.Get("ApiKey", "");
        IList<Session> sessions;

        Debug.WriteLine(string.IsNullOrEmpty(apiURL));
        if (string.IsNullOrEmpty(apiURL))
        {
            NavManager.NavigateTo("/FirstRun");
        }
        else if (string.IsNullOrEmpty(apiKey))
        {
            NavManager.NavigateTo("/FirstRun");
        }
        else
        {
            bool isValid = await ApiService.AreSettingsValidAsync(apiKey, apiURL);
            if (!isValid)
            {
                NavManager.NavigateTo("/FirstRun");
            }
            else
            {
                sessions = await ApiService.GetSessionsAsync(0, "desc");
        
                @foreach (var session in sessions)
                {
                    _sessions.Add(session);
                }

                selectedSessionSlug = _sessions[0].SessionSlug;
                category = "Reception";
            }
        }
        

        

    }
}
