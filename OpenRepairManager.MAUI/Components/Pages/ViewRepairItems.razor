@page "/RepairItems"
@layout MazerLayout
@using System.Diagnostics
@using System.Timers
@using OpenRepairManager.MAUI.Services

<section class="section">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">In Progress Items</h4>
        </div>
        <div class="card-body">
            <p><a class="btn btn-success" href="/Item/0">New Item</a>&nbsp; <a class="btn btn-info" @onclick="RefreshAsync">Refresh</a>&nbsp; </p>

            <a style="@isDesktop" href="/ReturningItem" class="btn btn-primary"><i class="bi bi-qr-code-scan"></i>Scan Item</a>
            <a style="@isMobile" @onclick="() => App.Current.MainPage.Navigation.PushModalAsync(new BarcodeScanner())" class="btn btn-primary"><i class="bi bi-qr-code-scan"></i>Scan Item</a>
            
            <div class="table-responsive">
                <table class="table table-striped mb-0" id="locTable">
                    <thead>
                    <tr>
                        <th>Repair Item</th>
                        <th>Category</th>
                        <th>Customer</th>
                        <th>Issue</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var repairItem in _repairItems.Where(i => !i.Completed))
                    {
                        <tr>
                            <td>@repairItem.ItemName</td>
                            <td>@repairItem.PartnerProductCategory</td>
                            <td>@repairItem.CustomerName</td>
                            <td>@repairItem.Problem</td>
                            <td><a href="/Item/@repairItem.ID">Edit</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Completed Items</h4>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped mb-0" id="locTable">
                    <thead>
                    <tr>
                        <th>Repair Item</th>
                        <th>Category</th>
                        <th>Customer</th>
                        <th>Issue</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var repairItem in _repairItems.Where(i => i.Completed))
                    {
                        <tr>
                            <td>@repairItem.ItemName</td>
                            <td>@repairItem.PartnerProductCategory</td>
                            <td>@repairItem.CustomerName</td>
                            <td>@repairItem.Problem</td>
                            <td><a href="/Item/@repairItem.ID">Edit</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>


<script>
    document.getElementById('pageTitle').innerHTML = "View Repair Items";
    document.getElementById('pageTitle2').innerHTML = "View Repair Items";
</script>
<script type="text/javascript">
    document.getElementById('dashNav').classList.remove('active')
    document.getElementById('repairsMenu').classList.add('active')
    document.getElementById('sessionNav').classList.remove('active')
    document.getElementById('apiNav').classList.remove('active')
    document.getElementById('aboutNav').classList.remove('active')
</script>
@code {
    private string isDesktop = "display: none";
    private string isMobile = "display: none";
    private List<RepairItem> _repairItems = new();
    
    public string categorySlug { get; set; }
    
    public string sessionSlug { get; set; }

    protected override async Task OnInitializedAsync()
    {
#if MACCATALYST
        isDesktop = "";
#elif WINDOWS
        isDesktop = "";
#else
        isMobile = "";
#endif
        _repairItems.Add(new()
        {
            ID = 0,
            ItemName = "Loading"
        });
        categorySlug = Preferences.Default.Get("Category", "");
        sessionSlug = Preferences.Default.Get("SessionSlug", "");
        
        if (string.IsNullOrEmpty(categorySlug))
            NavManager.NavigateTo("/");
        
        var repairItems = await ApiService.GetStatsAsync(sessionSlug, categorySlug);
        
        _repairItems = repairItems.ToList();
    }

    private async Task ScanAsync()
    {
        await App.Current.MainPage.Navigation.PushModalAsync(new BarcodeScanner());
    }
    
    private async Task RefreshAsync()
    {
        var repairItems = await ApiService.GetStatsAsync(sessionSlug, categorySlug);
        
        _repairItems = repairItems.ToList();
    }

}